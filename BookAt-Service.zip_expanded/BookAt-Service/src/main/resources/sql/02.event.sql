-- 이벤트 테이블에서 사용할 시퀀스
CREATE SEQUENCE SEQ_EVENT;

-- 이벤트 테이블
CREATE TABLE EVENT (
    EVENT_ID          NUMBER          PRIMARY KEY,
    BOOK_ID           VARCHAR2(20)    NULL,
    TICKET_TYPE       VARCHAR2(20)    NOT NULL,
    EVENT_NAME        VARCHAR2(200)   NOT NULL,
    EVENT_DESCRIPTION  VARCHAR2(4000)  NOT NULL,
    EVENT_PRICE       NUMBER          NOT NULL,
    EVENT_IMAGE       VARCHAR2(1000)  NULL,
    LOCAL_CODE        VARCHAR2(20)    NOT NULL,
    ADDRESS           VARCHAR2(2000)  NOT NULL
);

-- [제약조건] 티켓 타입
ALTER TABLE EVENT ADD CONSTRAINT CHK_TICKET_TYPE 
CHECK (TICKET_TYPE IN ('SEAT_TYPE', 'PERSON_TYPE'));

-- [제약조건] 지역코드 
ALTER TABLE EVENT ADD CONSTRAINT CHK_LOCAL_CODE 
CHECK (LOCAL_CODE IN ('SEOUL', 'GYEONGGI_INCHEON', 'JEOLLA', 'GYEONGSANG', 'GANGWON', 'CHUNGCHEONG', 'JEJU'));

-- EVENT 테이블의 BOOK_ID를 BOOK 테이블의 BOOK_ID와 연결
ALTER TABLE EVENT ADD CONSTRAINT FK_EVENT_BOOK FOREIGN KEY (BOOK_ID)
REFERENCES BOOK (BOOK_ID);

--EVENT 테이블에 EVENT_DATE컬럼 추가
ALTER TABLE EVENT
ADD EVENT_DATE DATE DEFAULT DATE '2025-09-30' NOT NULL;

--EVENT_DATE 컬럼에 데이터 삽입
UPDATE EVENT SET EVENT_DATE = DATE '2025-09-28' WHERE EVENT_ID = 1;
-- 생략

---------------------------------------------------------------------------------

--이벤트회차 테이블에서 사용할 시퀀스
CREATE SEQUENCE SEQ_EVENT_PART;

--이벤트회차 테이블
CREATE TABLE EVENT_PART(
	SCHEDULE_ID NUMBER PRIMARY KEY,
	SCHEDULE_TIME DATE NOT NULL,
	SCHEDULE_NAME VARCHAR2(50),
	EVENT_ID NUMBER NOT NULL
);

--이벤트 회차의 EVENT_ID를 이벤트 테이블의 EVENT_ID와 연결
ALTER TABLE EVENT_PART ADD CONSTRAINT FK_EVENT_PART_EVENT FOREIGN KEY (EVENT_ID) 
REFERENCES EVENT(EVENT_ID);

---------------------------------------------------------------------------------

-- 이벤트 인원 유형 
CREATE TABLE PERSON_TYPE (
	PERSON_TYPE_ID NUMBER PRIMARY KEY,
	PERSON_TYPE VARCHAR2(20) NOT NULL,
	PERSON_TYPE_RATE NUMBER(3,1) NOT NULL
);
CREATE SEQUENCE SEQ_PERSON_TYPE;

ALTER TABLE PERSON_TYPE ADD CONSTRAINT CHK_PERSON_TYPE 
CHECK (PERSON_TYPE IN ('ADULT', 'YOUTH', 'CHILD'));
ALTER TABLE PERSON_TYPE ADD CONSTRAINT CHK_PERSON_TYPE_RATE
CHECK (PERSON_TYPE_RATE IN (100, 80, 50));

---------------------------------------------------------------------------------

-- 이벤트 좌석 등급
CREATE SEQUENCE SEQ_SEAT_GRADE;

CREATE TABLE SEAT_GRADE(
	SEAT_GRADE_ID NUMBER PRIMARY KEY,
	SEAT_GRADE_TYPE VARCHAR(20) NOT NULL,
	SEAT_RATE NUMBER NOT NULL
);

---------------------------------------------------------------------------------

-- 이벤트 좌석 유형
CREATE SEQUENCE SEQ_SEAT_TYPE;

CREATE TABLE SEAT_TYPE(
	SEAT_ID NUMBER PRIMARY KEY,
	SEAT_NAME VARCHAR2(50) NULL,
	SEAT_STATUS NUMBER(2) NOT NULL, 
	EVENT_ID NUMBER NOT NULL, 
	SEAT_GRADE_ID NUMBER NOT NULL, 
	SCHEDULE_ID NUMBER NOT NULL 
);

-- SEAT_STATUS
-- 1 : ABAILABLE, 예약가능
-- -1 : HOLD, 좌석 홀드 중 (예약불가)
-- 0 : SOLD, 예약됨 (예약불가)

-- [제약조건] 이벤트 아이디 = 외래키
ALTER TABLE SEAT_TYPE ADD CONSTRAINT FK_SEAT_TYPE
FOREIGN KEY (EVENT_ID)
REFERENCES EVENT (EVENT_ID);

-- [제약조건] 좌석등급번호 = 외래키
ALTER TABLE SEAT_TYPE ADD CONSTRAINT FK_SEAT_GRADE
FOREIGN KEY (SEAT_GRADE_ID)
REFERENCES SEAT_GRADE (SEAT_GRADE_ID);

-- [제약조건] 회차번호 = 외래키
ALTER TABLE SEAT_TYPE ADD CONSTRAINT FK_SEAT_SCHEDULE
FOREIGN KEY (SCHEDULE_ID)
REFERENCES EVENT_PART (SCHEDULE_ID)

---------------------------------------------------------------------------------

-- 티켓 
CREATE TABLE TICKET (
	TICKET_ID NUMBER PRIMARY KEY,
	TICKET_CREATED_DATE DATE NOT NULL,
	TICKET_STATUS NUMBER(2) NOT NULL,
	TICKET_TYPE VARCHAR(20) NOT NULL,
	RESERVATION_ID NUMBER NOT NULL,
	PERSON_TYPE_CODE NUMBER NULL,
	SEAT_CODE NUMBER NULL,
	PAYMENT_ID NUMBER NOT NULL
);
CREATE SEQUENCE SEQ_TICKET;

ALTER TABLE TICKET ADD CONSTRAINT FK_RESERVATION_ID FOREIGN KEY (RESERVATION_ID)
REFERENCES RESERVATION (RESERVATION_ID);
ALTER TABLE TICKET ADD CONSTRAINT FK_PERSON_TYPE_CODE FOREIGN KEY (PERSON_TYPE_CODE)
REFERENCES PERSON_TYPE (PERSON_TYPE_ID);
ALTER TABLE TICKET ADD CONSTRAINT FK_PAYMENT_ID FOREIGN KEY (PAYMENT_ID)
REFERENCES PURCHASE (PAYMENT_ID);
ALTER TABLE TICKET ADD CONSTRAINT FK_SEAT_CODE FOREIGN KEY (SEAT_CODE)
REFERENCES SEAT_TYPE (SEAT_ID);

ALTER TABLE TICKET ADD CONSTRAINT CHK_TICKET_STATUS
CHECK (TICKET_STATUS IN (1, 0, -1));
ALTER TABLE TICKET ADD CONSTRAINT CHK_TICKET_TYPE2
CHECK (TICKET_TYPE IN ('SEAT_TYPE', 'PERSON_TYPE'));

---------------------------------------------------------------------------------

-- 이벤트 예매 
CREATE TABLE RESERVATION (
	RESERVATION_ID NUMBER PRIMARY KEY,
	PAYMENT_ID NUMBER NOT NULL,
	RESERVATION_DATE DATE NOT NULL,
	RESERVATION_STATUS NUMBER(2) NOT NULL,
	PART_ID NUMBER NOT NULL,
	USER_ID VARCHAR2(50) NOT NULL
);
CREATE SEQUENCE SEQ_RESERVATION;

ALTER TABLE RESERVATION ADD CONSTRAINT FK_RESERVATION_PAYMENT_ID FOREIGN KEY (PAYMENT_ID)
REFERENCES PURCHASE (PAYMENT_ID);
ALTER TABLE RESERVATION ADD CONSTRAINT FK_USER_ID FOREIGN KEY (USER_ID)
REFERENCES USERS (USER_ID);

ALTER TABLE RESERVATION ADD CONSTRAINT CHK_RESERVATION_STATUS
CHECK (RESERVATION_STATUS IN (1, 0, -1, 2));

---------------------------------------------------------------------------------











